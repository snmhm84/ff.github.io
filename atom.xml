<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>昜畨蕃</title>
  
  <subtitle>YangFanfan</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yangfanfan.cn/"/>
  <updated>2020-05-04T15:20:13.579Z</updated>
  <id>http://www.yangfanfan.cn/</id>
  
  <author>
    <name>昜畨蕃</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自定义vscode插件安装位置</title>
    <link href="http://www.yangfanfan.cn/2020/05/02/%E8%87%AA%E5%AE%9A%E4%B9%89vscode%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE/"/>
    <id>http://www.yangfanfan.cn/2020/05/02/%E8%87%AA%E5%AE%9A%E4%B9%89vscode%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE/</id>
    <published>2020-05-01T16:00:00.000Z</published>
    <updated>2020-05-04T15:20:13.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自定义vscode插件安装位置"><a href="#自定义vscode插件安装位置" class="headerlink" title="自定义vscode插件安装位置"></a>自定义vscode插件安装位置</h2><p>1、前提：已安装VSCode，并且已将其添加到了环境变量path中；</p><p>2、打开cmd，输入code –help,显示如下：</p><p>输入命令：code –extensions-dir 你的目标文件夹,回车则启动vscode，此时安装的插件会放到指定的目录。(可以添加快捷方式)</p><p>或者编写一个bat文件，每次调用此命令来启动vscode：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">"%1"</span> == <span class="string">"h"</span> goto begin </span><br><span class="line"></span><br><span class="line">mshta vbscript:createobject(<span class="string">"wscript.shell"</span>).run(<span class="string">"%~nx0 h"</span>,<span class="number">0</span>)(window.close)&amp;&amp;<span class="keyword">exit</span> </span><br><span class="line"></span><br><span class="line">:begin </span><br><span class="line"></span><br><span class="line">code --extensions-dir F:\ProgramFiles\VSCode\extensions</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;自定义vscode插件安装位置&quot;&gt;&lt;a href=&quot;#自定义vscode插件安装位置&quot; class=&quot;headerlink&quot; title=&quot;自定义vscode插件安装位置&quot;&gt;&lt;/a&gt;自定义vscode插件安装位置&lt;/h2&gt;&lt;p&gt;1、前提：已安装VSCode，并且已
      
    
    </summary>
    
    
      <category term="操作笔记" scheme="http://www.yangfanfan.cn/categories/%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="VSCode" scheme="http://www.yangfanfan.cn/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>给 Hexo 主题添加动态背景</title>
    <link href="http://www.yangfanfan.cn/2017/05/09/hexo-dynamic/"/>
    <id>http://www.yangfanfan.cn/2017/05/09/hexo-dynamic/</id>
    <published>2017-05-09T08:10:24.000Z</published>
    <updated>2020-05-02T07:21:18.663Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改-layout-ejs"><a href="#修改-layout-ejs" class="headerlink" title="修改 _layout.ejs"></a>修改 _layout.ejs</h2><p>打开themes/主题名称/layout/_layout.ejs<br>在 &lt; /body&gt;之前添加代码（不要放在&lt; /head&gt;后）。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.canvas_nest) &#123; %&gt;</span><br><span class="line">&lt;script <span class="attribute">type</span>=<span class="string">"text/javascript"</span></span><br><span class="line"><span class="attribute">color</span>=<span class="string">"0,0,0"</span> <span class="attribute">opacity</span>=<span class="string">'0.4'</span> <span class="attribute">zIndex</span>=<span class="string">"-2"</span> <span class="attribute">count</span>=<span class="string">"66"</span> <span class="attribute">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>以上代码格式并不绝对，可以参照自己所用主题的 _layout 中有 if 的那部分代码。多尝试，并不难。</p><h2 id="配置项说明"><a href="#配置项说明" class="headerlink" title="配置项说明"></a>配置项说明</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">color：线条颜色, 默认：'<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>'；三个数字分别为（R,G,B）</span><br><span class="line">opacity：线条透明度（<span class="number">0</span>~<span class="number">1</span>）, 默认：<span class="number">0.5</span></span><br><span class="line">count：线条的总数量，默认：<span class="number">150</span></span><br><span class="line">zIndex：背景的z-index属性，css属性用于控制所在层的位置，默认：<span class="number">-1</span></span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>打开themes/主题名称/_config.yml，随意找一行，添加代码：</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># --------------------------------------------------------------</span></span><br><span class="line"><span class="meta"># background settings</span></span><br><span class="line"><span class="meta"># --------------------------------------------------------------</span></span><br><span class="line"><span class="meta"># add canvas-nest effect</span></span><br><span class="line"><span class="meta"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后运行hexo s，在浏览器的地址栏输入localhost:4000就能看到效果了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;修改-layout-ejs&quot;&gt;&lt;a href=&quot;#修改-layout-ejs&quot; class=&quot;headerlink&quot; title=&quot;修改 _layout.ejs&quot;&gt;&lt;/a&gt;修改 _layout.ejs&lt;/h2&gt;&lt;p&gt;打开themes/主题名称/layout/_la
      
    
    </summary>
    
    
      <category term="网站建设" scheme="http://www.yangfanfan.cn/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="Hexo" scheme="http://www.yangfanfan.cn/tags/Hexo/"/>
    
      <category term="主题" scheme="http://www.yangfanfan.cn/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo+github搭建免费个人博客详细教程</title>
    <link href="http://www.yangfanfan.cn/2016/08/18/hexo-github/"/>
    <id>http://www.yangfanfan.cn/2016/08/18/hexo-github/</id>
    <published>2016-08-18T04:14:44.000Z</published>
    <updated>2020-05-02T07:00:09.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等；</li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始一切之前，你必须已经：</p><ul><li>有一个github账号，没有的话去注册一个；</li><li>安装了node.js、npm，并了解相关基础知识；</li><li>安装了git for windows（或者其它git客户端）</li></ul><p>本文所使用的环境：</p><ul><li>Windows8.1</li><li><a href="mailto:node.js@5.5.0">node.js@5.5.0</a></li><li><a href="mailto:git@1.9.2">git@1.9.2</a></li><li><a href="mailto:hexo@3.2.2">hexo@3.2.2</a></li></ul><h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>新建一个名为<code>你的用户名.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io</a> 了，是不是很方便？</p><p>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p><p>几个注意的地方：</p><ol><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名；</li><li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</li></ol><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>当然，你不绑定域名肯定也是可以的，就用默认的 <code>xxx.github.io</code> 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。</p><p>首先你要注册一个域名，域名注册以前总是推荐去<code>godaddy</code>，现在觉得其实国内的阿里云也挺不错的，价格也不贵，毕竟是大公司，放心！</p><p>绑定域名分2种情况：带www和不带www的。</p><p>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下<code>你的用户名.github.io</code>的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向<code>你的用户名.github.io</code>，这样可以保证无论是否添加www都可以访问，如下：</p><p><img src="http://image.liuxianan.com/201608/20160823_191336_238_8683.png" alt=""></p><p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试：</p><ul><li>如果你填写的是没有www的，比如 mygit.me，那么无论是访问 <a href="http://www.mygit.me" target="_blank" rel="noopener">http://www.mygit.me</a> 还是 <a href="http://mygit.me" target="_blank" rel="noopener">http://mygit.me</a> ，都会自动跳转到 <a href="http://mygit.me" target="_blank" rel="noopener">http://mygit.me</a></li><li>如果你填写的是带www的，比如 <a href="http://www.mygit.me" target="_blank" rel="noopener">www.mygit.me</a> ，那么无论是访问 <a href="http://www.mygit.me" target="_blank" rel="noopener">http://www.mygit.me</a> 还是 <a href="http://mygit.me" target="_blank" rel="noopener">http://mygit.me</a> ，都会自动跳转到 <a href="http://www.mygit.me" target="_blank" rel="noopener">http://www.mygit.me</a></li><li>如果你填写的是其它子域名，比如 abc.mygit.me，那么访问 <a href="http://abc.mygit.me" target="_blank" rel="noopener">http://abc.mygit.me</a> 没问题，但是访问 <a href="http://mygit.me" target="_blank" rel="noopener">http://mygit.me</a> ，不会自动跳转到 <a href="http://abc.mygit.me" target="_blank" rel="noopener">http://abc.mygit.me</a></li></ul><p>另外说一句，在你绑定了新域名之后，原来的<code>你的用户名.github.io</code>并没有失效，而是会自动跳转到你的新域名。</p><h1 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h1><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p>用git bash执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/. ssh <span class="comment">#检查本机已存在的ssh密钥</span></span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git。</p><pre><code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code></pre><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p><img src="http://image.liuxianan.com/201608/20160818_143914_495_9084.png" alt=""></p><p>将刚复制的内容粘贴到key那里，title随便填，保存。</p><h2 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h2><pre><code>$ ssh -T git@github.com # 注意邮箱地址不用改</code></pre><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息说明SSH已配置成功！</p><p>此时你还需要配置：</p><pre><code>$ git config --global user.name &quot;liuxianan&quot;// 你的github用户名，非昵称$ git config --global user.email  &quot;xxx@qq.com&quot;// 填写你的github注册邮箱</code></pre><p>具体这个配置是干嘛的我没仔细深究。</p><h1 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h1><h2 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h2><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><p>官网： <a href="http://hexo.io" target="_blank" rel="noopener">http://hexo.io</a><br>github: <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">https://github.com/hexojs/hexo</a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>安装之前先来说几个注意事项：</p><ol><li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li><li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li><li>hexo有2种<code>_config.yml</code>文件，一个是根目录下的全局的<code>_config.yml</code>，一个是各个<code>theme</code>下的；</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是<code>F:\Workspaces\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /f/Workspaces/hexo/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p><p><img src="http://image.liuxianan.com/201608/20160818_115922_773_1148.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><p>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><p><img src="http://image.liuxianan.com/201608/20160818_120700_028_2426.png" alt=""></p><p><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章：</p><p><a href="http://blog.liuxianan.com/windows-port-bind.html" target="_blank" rel="noopener">http://blog.liuxianan.com/windows-port-bind.html</a></p><p>第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子：</p><p><img src="http://image.liuxianan.com/201608/20160818_132443_202_6848.png" alt=""></p><h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;使用github pages服务搭建博客的好处有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全是静态文件，访问速度快；&lt;/li&gt;
&lt;li&gt;免费方便，不用花
      
    
    </summary>
    
    
      <category term="网站建设" scheme="http://www.yangfanfan.cn/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="hexo" scheme="http://www.yangfanfan.cn/tags/hexo/"/>
    
      <category term="github" scheme="http://www.yangfanfan.cn/tags/github/"/>
    
      <category term="搭建" scheme="http://www.yangfanfan.cn/tags/%E6%90%AD%E5%BB%BA/"/>
    
      <category term="博客" scheme="http://www.yangfanfan.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="git" scheme="http://www.yangfanfan.cn/tags/git/"/>
    
  </entry>
  
</feed>
